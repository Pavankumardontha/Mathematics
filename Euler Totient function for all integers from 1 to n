#include<bits/stdc++.h>
#include<iostream>
using namespace std;
/* Finding Euler's totient function for all the integers from 1 to N. N<=10^(6).*/
/*
1) We will initialise the Phi[n] array. phi[i]=i.
2) if for any i,phi[i]==i then it means that i is a prime number. This is similar to sieve.
In this case,we will visit each of its multiples,multiply it by (i-1) and divide by i.
3) we will repeat this process.

Time Complexity = O(Nlog(log(N)))
*/



int phi[1000001];

void ETF()
{
    int n=1000000;
    for(int i=1;i<=n;i++)
    phi[i]=i;
    
    for(int i=2;i<=n;i++)
    {
        if(phi[i]==i)
        {
            for(int j=i;j<=n;j+=i)
            {
                phi[j] = phi[j]*(i-1);
                phi[j] = phi[j]/i;
            }
        }
    }
}

int main()
{
    ETF();
    int t;
    int n;
    cin>>t;
    while(t--)
    {
        cin>>n;
        cout<<phi[n]<<endl;
    }
}
